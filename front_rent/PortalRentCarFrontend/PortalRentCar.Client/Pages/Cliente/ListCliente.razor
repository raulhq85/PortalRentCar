@page "/cliente/list"
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting;
@inject IClienteProxy Proxy
@inject NavigationManager Nav
@inject IToastService Toaster
@inject SweetAlertService Swal
@inject IJSRuntime JsRuntime
@inject HttpClient HttpClient
@inject IWebAssemblyHostEnvironment WebAssemblyHost

<ListaGenerica TItem="ClienteDtoResponse" Lista="Clientes" Titulo="Lista de Cliente">
    <Filtros>
        <div class="row">
            <div class="col-2">
                <label for="Cliente" class="form-label">Nombre</label>
                <InputText class="form-control" id="Cliente" @bind-Value="BusquedaRequest.Cliente" />
            </div>
            <div class="col-2">
                <label for="NroDocumento" class="form-label">Nro Documento</label>
                <InputText class="form-control" id="NroDocumento" @bind-Value="BusquedaRequest.NroDocumento" />
            </div>

        </div>
        <div class="row mt-3 justify-content-end">
            <div class="col-auto">
                <button class="btn btn-outline-primary" @onclick="OnSearch">
                    <i class="bi bi-search me-1"></i>Buscar
                </button>
            </div>
            <div class="col-auto">
                <button class="btn btn-outline-primary" @onclick="OnLimpiar">
                    <i class="bi bi-eraser-fill me-1"></i>Limpiar
                </button>
            </div>
        </div>
    </Filtros>
    <Cabeceras>
        <th>#</th>
        <th>NRO Documento</th>
        <th>NOMBRE</th>
        <th>CORREO</th>
        <th>TELEFONO</th>
    </Cabeceras>
    <Detalles>
        <td>@context.Id</td>
        <td>@context.NroDocumento</td>
        <td>@context.RazonSocial</td>
        <td>@context.Correo</td>
        <td>@context.Telefono</td>
    </Detalles>
</ListaGenerica>

<DataPager @ref="Paginador" Result="PagedResult" OnPageChanged="PaginaCambiada" OnPageSizeChanged="FilasPorPagina"></DataPager>

<LoadingComponent IsLoading="IsLoading" />

@code {

    public ClienteSearchDtoRequest BusquedaRequest { get; set; } = new()
        {
            Cliente = null,
            ClienteId = null,
            NroDocumento = null,
            Pagina = 1,
            Filas = 5
        };
    public ICollection<ClienteDtoResponse>? Clientes { get; set; }

    public bool IsLoading { get; set; }

    public DataPager Paginador { get; set; } = default!;

    public PagedResult<ClienteDtoResponse> PagedResult { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {

        PagedResult = new PagedResult<ClienteDtoResponse>()
            {
                CurrentPage = BusquedaRequest.Pagina,
                RowPerPage = BusquedaRequest.Filas
            };

        await OnSearch();
    }

    private async Task OnSearch()
    {
        try

        {
            IsLoading = true;

            var response = await Proxy.ListAsync(BusquedaRequest);

            Clientes = response.Data;
            if (Clientes is not null)
            {
                PagedResult.Results = Clientes;
                PagedResult.RowCount = Clientes.Count;
                PagedResult.TotalPages = response.TotalPages;
            }
        }
        catch (Exception ex)
        {
            Toaster.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void OnLimpiar()
    {
        BusquedaRequest = new() { Pagina = 1, Filas = 5 };
    }

    private async Task PaginaCambiada()
    {
        IsLoading = true;
        BusquedaRequest.Pagina = PagedResult.CurrentPage;
        BusquedaRequest.Filas = PagedResult.RowPerPage;
        await OnSearch();
    }

    private async Task FilasPorPagina()
    {
        BusquedaRequest.Pagina = PagedResult.CurrentPage;
        BusquedaRequest.Filas = PagedResult.RowPerPage;
        await OnSearch();
    }




}
