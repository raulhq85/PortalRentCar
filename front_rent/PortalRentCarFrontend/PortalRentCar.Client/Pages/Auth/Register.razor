@page "/Register"
@layout UserLayout
@inject IToastService ToastService
@inject IUserProxy UserProxy
@inject NavigationManager NavigationManager


<div class="col-12">
    <EditForm Model="Request" OnValidSubmit="ValidRegister">
        <h3>Registrar usuario</h3>
        <DataAnnotationsValidator />
        <div class="form-floating mb-1">
            <input type="text" class="form-control" autocomplete="off" @bind-value="Request.Usuario" id="Usuario" />
            <label for="Usuario" class="form-label">Usuario</label>
            <ValidationMessage For="() => Request.Usuario"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="text" class="form-control" autocomplete="off" @bind-value="Request.NombresCompleto" id="nombrecompleto" />
            <label for="nombrecompleto" class="form-label">Nombre completo</label>
            <ValidationMessage For="() => Request.NombresCompleto"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="text" class="form-control" autocomplete="off" @bind-value="Request.NroDocumento" id="nrodocumento" />
            <label for="nrodocumento" class="form-label">Nro Documento</label>
            <ValidationMessage For="() => Request.NroDocumento"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="email" class="form-control" autocomplete="off" @bind-value="Request.Email" id="email" />
            <label for="email" class="form-label">Email</label>
            <ValidationMessage For="() => Request.Email"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="text" class="form-control" autocomplete="off" @bind-value="Request.Telefono" id="telefono" />
            <label for="telefono" class="form-label">Telefono</label>
            <ValidationMessage For="() => Request.Telefono"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="password" class="form-control" autocomplete="off" @bind-value="Request.Password" id="password" />
            <label for="password" class="form-label">Password</label>
            <ValidationMessage For="() => Request.Password"></ValidationMessage>
        </div>
        <div class="form-floating mb-1">
            <input type="password" class="form-control" autocomplete="off" @bind-value="Request.ConfirmPassword" id="confirmarpassword" />
            <label for="confirmarpassword" class="form-label">Confirmar Password</label>
            <ValidationMessage For="() => Request.ConfirmPassword"></ValidationMessage>
        </div>
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-lg btn-primary">Registrar</button>
        </div>
    </EditForm>
</div>

<LoadingComponent IsLoading="IsLoading" />

@code {

    public RegistrarUsuarioDto Request { get; set; } = new();
    public bool IsLoading { get; set; }

    private async Task ValidRegister()
    {
        try
        {
            IsLoading = true;

            await UserProxy.Register(Request);

            ToastService.ShowSuccess("Su cuenta ha sido creada");

            NavigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }

}
